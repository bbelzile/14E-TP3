
name: deploiement-app
on:
  push:
    #branches: [master] 
    tags: ["TP3-V*"]
  pull_request:
    branches: [master]
      

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  
                             

    env:
      Solution_Path: TP214E.sln   
      Project_Path: TP214E/TP214E.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
      
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Restore the application
      run: dotnet restore ${{ env.Project_Path }}
        
    - name: Build the application
      run: dotnet build ${{ env.Project_Path }} -c release --no-restore

    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test
      
    - name: Publish the application
      run: dotnet publish ${{ env.Project_Path }} -c Release -r win-x64 --self-contained --no-build
      
    - name: Create a release  part 1
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}

    - name: Create a release part 2 
      uses: csexton/release-asset-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        pattern: TP214E/bin/Release/netcoreapp3.1/win-x64/publish/TP214E.exe
        release-url: ${{ steps.create_release.outputs.upload_url }}

  slack:
    name: Slack
    needs: publish # set needs only last job except this job
    runs-on: windows-latest
    if: always() # set always
    steps:
        # run this action to get workflow conclusion
        # You can get conclusion via env (env.WORKFLOW_CONCLUSION)
      - uses: technote-space/workflow-conclusion-action@v2
      - uses: 8398a7/action-slack@v3
        with:
          # status: ${{ env.WORKFLOW_CONCLUSION }} # neutral, success, skipped, cancelled, timed_out, action_required, failure
          status: failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: env.WORKFLOW_CONCLUSION == 'failure' # notify only if failure
        name: creating issue
      - uses: peter-evans/create-issue-from-file@v3
        with:
          title: ${{ github.ref }}
          content-filepath: ./issue-content/output.md
          labels: |
            report
            automated issue
