
name: deploiement-app

on:
  push:
    branches: 
      - master
    tags: 
      - TP3-V*
  pull_request:
    branches: 
      - master
    tags: 
      - TP3-V*
      

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: TP214E                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Project_Path: TP214E/TP214E.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Build app
    - uses: "marvinpinto/action-automatic-releases@latest"
    - run: dotnet restore ${{ env.Project_Path }}

    - run: dotnet build ${{ env.Project_Path }} -c Release --no-restore

    - run: dotnet publish ${{ env.Project_Path }} -c Release --self-contained -r win-x64 -p:PublishSingleFile=true --no-build
    
    - name: Create a release  
    - uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}

    - uses: csexton/release-asset-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        pattern: ClassCommands/bin/Release/netcoreapp3.1/win-x64/publish/*.exe
        release-url: ${{ steps.create_release.outputs.upload_url }}
